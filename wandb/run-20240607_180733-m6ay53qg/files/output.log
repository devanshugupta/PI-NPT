Loaded metadata for fixed test set. n_cv_splits set to 1.
CV Splits for this dataset are cached. Loading from file.
CV Index: 0
Train-test Split 1/1
Building NPT.
All features are either categorical or numerical. Not going to bother doing feature type embeddings.
Using feature type embedding (unique embedding for categorical and numerical features).
Using feature index embedding (unique embedding for each column).
Clipping gradients to value 1.0.
Model has 31576838 parameters,batch size -1.
Initialized "lookahead_lamb" optimizer.
[[0.         0.         1.        ]
 [0.02454369 0.         1.02454123]
 [0.04908739 0.         1.04906767]
 ...
 [2.82252465 0.12121212 1.31368174]
 [4.17242774 0.7979798  0.14227139]
 [0.29452431 0.54545455 1.29028468]]
Disabling AUROC metric.
	Because AUROC does not (in the current implem.) support multiclass (True) classification.
--------> dataset arg Trainer: {'fixed_test_set_index': 256, 'c': {'entity': None, 'project': 'default', 'wandb_dir': './', 'data_path': 'data', 'data_set': 'ode', 'data_loader_nprocs': 0, 'data_set_on_cuda': False, 'data_force_reload': False, 'data_log_mem_usage': False, 'data_clear_tmp_files': False, 'data_dtype': 'float32', 'exp_device': 'cpu', 'exp_azure_sweep': False, 'exp_test_equivariance': False, 'exp_show_empirical_label_dist': False, 'exp_smoke_test': False, 'exp_name': 'bqeahd7h', 'exp_group': None, 'np_seed': 42, 'torch_seed': 42, 'baseline_seed': 42, 'exp_use_cuda': True, 'exp_n_runs': 1, 'exp_batch_size': -1, 'exp_batch_mode_balancing': True, 'exp_batch_class_balancing': False, 'exp_minibatch_sgd': True, 'exp_val_perc': 0.1, 'exp_test_perc': 0.2, 'exp_num_total_steps': 100000.0, 'exp_patience': -1, 'exp_checkpoint_setting': 'best_model', 'exp_cache_cadence': 1, 'exp_load_from_checkpoint': False, 'exp_print_every_nth_forward': False, 'exp_eval_every_n': 5, 'exp_eval_every_epoch_or_steps': 'epochs', 'exp_eval_test_at_end_only': False, 'exp_artificial_missing': 0, 'exp_optimizer': 'lookahead_lamb', 'exp_lookahead_update_cadence': 6, 'exp_optimizer_warmup_proportion': 0.7, 'exp_optimizer_warmup_fixed_n_steps': 10000, 'exp_lr': 0.001, 'exp_scheduler': 'flat_and_anneal', 'exp_gradient_clipping': 1.0, 'exp_weight_decay': 0, 'exp_tradeoff': 0.5, 'exp_tradeoff_annealing': 'cosine', 'exp_tradeoff_annealing_proportion': 1, 'mp_distributed': False, 'mp_nodes': 1, 'mp_gpus': 1, 'mp_nr': 0, 'mp_no_sync': -1, 'mp_bucket_cap_mb': 25, 'verbose': False, 'debug_leakage': False, 'debug_label_leakage': False, 'debug_row_interactions': False, 'debug_eval_row_interactions': False, 'debug_eval_row_interactions_timer': None, 'debug_row_interactions_mode': None, 'debug_no_stratify': False, 'debug_corrupt_standard_dataset_ablate_shuffle': False, 'model_class': 'NPT', 'sklearn_hyper_search': 'Grid', 'sklearn_model': 'All', 'sklearn_verbose': 1, 'sklearn_n_jobs': -1, 'sklearn_val_final_fit': False, 'model_is_semi_supervised': True, 'model_dtype': 'float32', 'model_amp': False, 'model_feature_type_embedding': True, 'model_feature_index_embedding': True, 'model_bert_augmentation': True, 'model_bert_mask_percentage': 0.9, 'model_augmentation_bert_mask_prob': {'train': 0.15, 'val': 0.0, 'test': 0.0}, 'model_label_bert_mask_prob': {'train': 1, 'val': 1, 'test': 1}, 'model_embedding_layer_norm': False, 'model_att_block_layer_norm': True, 'model_layer_norm_eps': 1e-12, 'model_att_score_norm': 'softmax', 'model_pre_layer_norm': True, 'model_hidden_dropout_prob': 0.1, 'model_att_score_dropout_prob': 0.1, 'model_hybrid_debug': False, 'model_checkpoint_key': None, 'model_dim_hidden': 128, 'model_num_heads': 8, 'model_sep_res_embed': True, 'model_stacking_depth': 8, 'model_mix_heads': True, 'model_rff_depth': 1, 'model_image_n_patches': False, 'model_image_patch_type': 'linear', 'model_image_n_channels': 3, 'model_image_share_embed': True, 'model_image_n_classes': 10, 'model_image_random_crop_and_flip': True, 'metrics_auroc': True, 'viz_att_maps': False, 'viz_att_maps_save_path': 'data/attention_maps', 'cv_index': 0}, 'data_table': array([[0.        , 0.        , 1.        ],
       [0.02454369, 0.        , 1.02454123],
       [0.04908739, 0.        , 1.04906767],
       ...,
       [2.82252465, 0.12121212, 1.31368174],
       [4.17242774, 0.7979798 , 0.14227139],
       [0.29452431, 0.54545455, 1.29028468]]), 'missing_matrix': array([[False, False, False],
       [False, False, False],
       [False, False, False],
       ...,
       [False, False, False],
       [False, False, False],
       [False, False, False]]), 'N': 1256, 'D': 3, 'cat_features': [], 'num_features': [0, 1, 2], 'cat_target_cols': [0], 'num_target_cols': [], 'auroc_setting': False, 'is_data_loaded': True, 'tmp_file_or_dir_names': ['wdbc.data'], 'fixed_split_indices': None}
Warming up for 70000.0/100000.0 steps.
Initialized "flat_and_anneal" learning rate scheduler.
Initialized "cosine" augmentation/label tradeoff annealer. Annealing to minimum value in 100000 steps.
Dataset Metadata:  <npt.column_encoding_dataset.ColumnEncodingDataset object at 0x30f3d4e50>
Disabled AUROC in loss module.
/Users/devu/anaconda3/envs/npt/lib/python3.8/site-packages/torch/optim/lr_scheduler.py:143: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  warnings.warn("Detected call of `lr_scheduler.step()` before `optimizer.step()`. "
/Users/devu/PycharmProjects/non-parametric-transformers/npt/mask.py:108: UserWarning: torch.sparse.SparseTensor(indices, values, shape, *, device=) is deprecated.  Please use torch.sparse_coo_tensor(indices, values, shape, dtype=, device=). (Triggered internally at /Users/runner/work/_temp/anaconda/conda-bld/pytorch_1711403207619/work/torch/csrc/utils/tensor_new.cpp:620.)
  mask = torch.sparse.FloatTensor(
Traceback (most recent call last):
  File "run.py", line 205, in <module>
    main(args)
  File "run.py", line 23, in main
    run_cv(args=args, wandb_args=wandb_args)
  File "run.py", line 117, in run_cv
    run_cv_splits(wandb_args, args, c, wandb_run)
  File "run.py", line 196, in run_cv_splits
    trainer.train_and_eval()
  File "/Users/devu/PycharmProjects/non-parametric-transformers/npt/train.py", line 217, in train_and_eval
    if self.per_epoch_train_eval(epoch=epoch):
  File "/Users/devu/PycharmProjects/non-parametric-transformers/npt/train.py", line 172, in per_epoch_train_eval
    train_loss = self.run_epoch(dataset_mode='train', epoch=epoch,
  File "/Users/devu/PycharmProjects/non-parametric-transformers/npt/train.py", line 437, in run_epoch
    self.run_batch(
  File "/Users/devu/PycharmProjects/non-parametric-transformers/npt/train.py", line 546, in run_batch
    self.forward_and_loss(**forward_kwargs)
  File "/Users/devu/PycharmProjects/non-parametric-transformers/npt/train.py", line 610, in forward_and_loss
    self.loss.compute(**loss_kwargs)
  File "/Users/devu/PycharmProjects/non-parametric-transformers/npt/loss.py", line 96, in compute
    loss_dict = self.compute_loss(*args, **kwargs)
  File "/Users/devu/PycharmProjects/non-parametric-transformers/npt/loss.py", line 309, in compute_loss
    physics_loss = self.compute_burgers_loss(output, data_dict)
  File "/Users/devu/PycharmProjects/non-parametric-transformers/npt/loss.py", line 133, in compute_burgers_loss
    u_pred = output[:, :-1]  # last column is time
TypeError: list indices must be integers or slices, not tuple
Computing PINNs Loss: